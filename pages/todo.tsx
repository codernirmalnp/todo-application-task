import React from 'react'
import Head from 'next/head'
import { useQueryClient } from 'react-query'
import { useFetchTask } from '../components/api/todo'
import { useCreateTaskForm } from '../components/api/useCreateTask'
import InputField from '../components/form/input-field'
import OptionField from '../components/form/option-fields'
import TextArea from '../components/form/text-area'
import toast from "react-hot-toast";
import { TaskCard } from '../components/task-card'

import Pagination from '../components/Pagination'

const Todo = () => {
    const [page, setPage] = React.useState(1)
    const queryClient = useQueryClient()
    const successCb = () => {
        queryClient.invalidateQueries("task");
        toast.success("Task Created Successfully")

        reset({})
    };
    const errorCb = (err: any) => {
        toast.error(err.message)
    };

    const { onSubmit, control, loading, reset } = useCreateTaskForm({ successCb, errorCb });
    const { isLoading, data } = useFetchTask(page)
    const result = data?.data?.data as Array<{ id: string, task: string, description: string, status: string }>

    const meta = data?.data?.meta;

    return <div className='container '>
        <Head>
            <title>Create Next App</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
        </Head>
        <div className='task-header'>
            <div><h2>Task List</h2><p>Add list of task here</p></div>
            <div className="form-container">
                <form onSubmit={onSubmit}>
                    <InputField name="task" label="Task" placeholder='Enter task' classes={{}} control={control} type="text" />
                    <TextArea name="description" label='description' placeholder='description' classes={{}} control={control} />
                    <OptionField control={control} name="task_status" type="option" label="Status" placeholder='Status' option={[{ label: "COMPLETED", value: "COMPLETED" }, { label: "PENDING", value: "PENDING" }, { label: "ACTIVE", value: "ACTIVE" }]} ></OptionField>
                    <button className='add-button' type="submit">Add Task</button>
                </form>

            </div>
        </div>

        <div className='main'>
            <div className='card-wrapper'>
                {result && result.map((value, i) => {
                    return <TaskCard key={i} result={result} value={value} i={i} />
                })

                }</div>


        </div>
        {meta && <Pagination currentPage={meta?.current_page} totalCount={meta?.total} pageSize={3} className="pagination-bar" onPageChange={(page: number) => { setPage(page) }} />}

        <div>




        </div>

    </div >
}
export default Todo;